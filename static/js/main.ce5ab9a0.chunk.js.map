{"version":3,"sources":["reportWebVitals.js","components/Editor.js","components/Previewer.js","markdown.md","App.js","theme.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","useStyles","makeStyles","theme","markdownEditor","backgroundColor","border","color","fontFamily","fontSize","typography","width","outline","Editor","props","classes","Container","component","TextareaAutosize","placeholder","minRows","id","value","onChange","handleChange","className","markdownPreviewer","Previewer","marked","setOptions","pedantic","gfm","breaks","sanitize","smartLists","Box","dangerouslySetInnerHTML","__html","source","grid","palette","primary","dark","App","useState","setValue","useEffect","fetch","Markdown","res","text","hljs","highlightAll","Fragment","Grid","container","item","xs","sm","children","e","target","createTheme","light","main","ReactDOM","render","StrictMode","ThemeProvider","document","getElementById"],"mappings":"4KAYeA,G,YAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,2DCHRQ,EAAYC,aAAW,SAACC,GAAD,MAAY,CACxCC,eAAgB,CACfC,gBAAiB,cACjBC,OAAQ,OACRC,MAAO,aACPC,WAAY,YACZC,SAAUN,EAAMO,WAAWD,SAC3BE,MAAO,OACP,UAAW,CACVC,QAAS,aAsBGC,MAjBf,SAAgBC,GACf,IAAMC,EAAUd,IAChB,OACC,cAACe,EAAA,EAAD,CAAWC,UAAU,UAArB,SACC,cAACC,EAAA,EAAD,CACC,aAAW,iBACXC,YAAY,QACZC,QAAS,GACTC,GAAG,SACHC,MAAOR,EAAMQ,MACbC,SAAUT,EAAMU,aAChBC,UAAWV,EAAQX,oB,0BCxBjBH,EAAYC,aAAW,SAACC,GAAD,MAAY,CACxCuB,kBAAmB,CAClBnB,MAAO,aACPE,SAAUN,EAAMO,WAAWD,SAC3BD,WAAYL,EAAMO,WAAWF,gBAiChBmB,MA7Bf,SAAmBb,GAElBc,IAAOC,WAAW,CACjBC,UAAU,EACVC,KAAK,EACLC,QAAQ,EACRC,UAAU,EACVC,YAAY,IAGb,IAMMnB,EAAUd,IAEhB,OACC,cAACe,EAAA,EAAD,CAAWC,UAAU,UAAUQ,UAAWV,EAAQW,kBAAlD,SACC,cAACS,EAAA,EAAD,CACCd,GAAG,UACHI,UAAU,cACVW,wBAZK,CACNC,OAAQT,IAAOd,EAAMwB,cCzBT,MAA0B,oC,kBCWnCrC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACxCoC,KAAM,CACLlC,gBAAiBF,EAAMqC,QAAQC,QAAQC,UAiD1BC,MA7Cf,WAEC,MAA0BC,mBAAS,IAAnC,mBAAOtB,EAAP,KAAcuB,EAAd,KACM9B,EAAUd,IAchB,OAZA6C,qBAAU,WACTC,MAAMC,GACJrD,MAAK,SAAAsD,GAAG,OAAIA,EAAIC,UAChBvD,MAAK,SAAAuD,GACL,OAAOL,EAASK,QAEhB,IAEHJ,qBAAU,WACTK,IAAKC,kBAIL,cAAC,IAAMC,SAAP,UACC,eAACC,EAAA,EAAD,CACCC,WAAS,EACT9B,UAAWV,EAAQwB,KAFpB,UAIC,cAACe,EAAA,EAAD,CACCE,MAAI,EACJC,GAAI,GACJC,GAAI,EACJC,SACC,cAAC,EAAD,CACCrC,MAAOA,EACPE,aAAc,SAACoC,GAAD,OAAOf,EAASe,EAAEC,OAAOvC,YAI1C,cAACgC,EAAA,EAAD,CACCE,MAAI,EACJC,GAAI,GACJC,GAAI,EACJC,SAAU,cAAC,EAAD,CAAWrB,OAAQhB,Y,QCrD9BnB,EAAQ2D,YAAY,CACtBtB,QAAS,CACPC,QAAS,CACPsB,MAAO,UACPC,KAAM,UACNtB,KAAM,YAGVhC,WAAY,CACVF,WAAY,qBACZC,SAAU,M,SCAdwD,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACC,EAAA,EAAD,CAAejE,MAAOA,EAAtB,SACE,cAAC,EAAD,QAGJkE,SAASC,eAAe,SAM1B9E,K","file":"static/js/main.ce5ab9a0.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\"\r\nimport { Container, TextareaAutosize } from '@material-ui/core';\r\nimport { makeStyles } from \"@material-ui/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tmarkdownEditor: {\r\n\t\tbackgroundColor: \"transparent\",\r\n\t\tborder: \"none\",\r\n\t\tcolor: \"whitesmoke\",\r\n\t\tfontFamily: \"monospace\",\r\n\t\tfontSize: theme.typography.fontSize,\r\n\t\twidth: \"100%\",\r\n\t\t\"&:focus\": {\r\n\t\t\toutline: \"none\"\r\n\t\t}\r\n\t}\r\n}))\r\n\r\nfunction Editor(props) {\r\n\tconst classes = useStyles()\r\n\treturn (\r\n\t\t<Container component=\"section\">\r\n\t\t\t<TextareaAutosize\r\n\t\t\t\taria-label=\"empty textarea\"\r\n\t\t\t\tplaceholder=\"Empty\"\r\n\t\t\t\tminRows={20}\r\n\t\t\t\tid=\"editor\"\r\n\t\t\t\tvalue={props.value}\r\n\t\t\t\tonChange={props.handleChange}\r\n\t\t\t\tclassName={classes.markdownEditor}\r\n\t\t\t/>\r\n\t\t</Container>\r\n\t)\r\n}\r\n\r\nexport default Editor\r\n","import React from 'react'\r\nimport marked from \"marked\"\r\nimport { Box, Container } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tmarkdownPreviewer: {\r\n\t\tcolor: \"whitesmoke\",\r\n\t\tfontSize: theme.typography.fontSize,\r\n\t\tfontFamily: theme.typography.fontFamily,\r\n\t}\r\n}))\r\n\r\nfunction Previewer(props) {\r\n\t\r\n\tmarked.setOptions({\r\n\t\tpedantic: false,\r\n\t\tgfm: true,\r\n\t\tbreaks: true,\r\n\t\tsanitize: false,\r\n\t\tsmartLists: true,\r\n\t});\r\n\r\n\tconst markdown = () => {\r\n\t\treturn {\r\n\t\t\t__html: marked(props.source)\r\n\t\t}\r\n\t}\r\n\r\n\tconst classes = useStyles()\r\n\r\n\treturn (\r\n\t\t<Container component=\"section\" className={classes.markdownPreviewer}>\r\n\t\t\t<Box\r\n\t\t\t\tid=\"preview\"\r\n\t\t\t\tclassName=\"border-none\"\r\n\t\t\t\tdangerouslySetInnerHTML={markdown()}>\r\n\t\t\t</Box>\r\n\t\t</Container>\r\n\t)\r\n}\r\n\r\nexport default Previewer\r\n","export default __webpack_public_path__ + \"static/media/markdown.d59e049f.md\";","import React, { useState, useEffect } from \"react\"\r\n\r\nimport hljs from 'highlight.js'\r\n\r\nimport Editor from \"./components/Editor\"\r\nimport Previewer from \"./components/Previewer\"\r\nimport Markdown from \"./markdown.md\"\r\n\r\nimport { Grid } from \"@material-ui/core\"\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tgrid: {\r\n\t\tbackgroundColor: theme.palette.primary.dark\r\n\t}\r\n}))\r\n\r\nfunction App() {\r\n\r\n\tconst [value, setValue] = useState(\"\")\r\n\tconst classes = useStyles();\r\n\r\n\tuseEffect(() => {\r\n\t\tfetch(Markdown)\r\n\t\t\t.then(res => res.text())\r\n\t\t\t.then(text => {\r\n\t\t\t\treturn setValue(text)\r\n\t\t\t});\r\n\t}, [])\r\n\r\n\tuseEffect(() => {\r\n\t\thljs.highlightAll()\r\n\t})\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<Grid \r\n\t\t\t\tcontainer\r\n\t\t\t\tclassName={classes.grid}\r\n\t\t\t>\r\n\t\t\t\t<Grid \r\n\t\t\t\t\titem\r\n\t\t\t\t\txs={12}\r\n\t\t\t\t\tsm={4}\r\n\t\t\t\t\tchildren={\r\n\t\t\t\t\t\t<Editor\r\n\t\t\t\t\t\t\tvalue={value}\r\n\t\t\t\t\t\t\thandleChange={(e) => setValue(e.target.value)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t}\r\n\t\t\t\t/>\t\r\n\t\t\t\t<Grid \r\n\t\t\t\t\titem\r\n\t\t\t\t\txs={12}\r\n\t\t\t\t\tsm={8}\r\n\t\t\t\t\tchildren={<Previewer source={value} />}\r\n\t\t\t\t/>\r\n\t\t\t</Grid>\r\n\t\t</React.Fragment>\r\n\t)\r\n}\r\n\r\nexport default App\r\n","import { createTheme } from '@material-ui/core/styles';\r\n\r\nlet theme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      light: \"#D4D8DB\",\r\n      main: \"#576269\",\r\n      dark: \"#292E31\"\r\n    }\r\n  },\r\n  typography: {\r\n    fontFamily: \"Roboto, sans-serif\",\r\n    fontSize: 18,\r\n  }\r\n})\r\n\r\nexport { theme }","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport 'highlight.js/styles/atom-one-light.css'\r\nimport \"./index.css\"\r\n\r\nimport reportWebVitals from './reportWebVitals';\r\nimport App from \"./App\"\r\n\r\nimport { theme } from \"./theme\"\r\nimport { ThemeProvider } from '@material-ui/styles';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ThemeProvider theme={theme}>\r\n      <App />\r\n    </ThemeProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}