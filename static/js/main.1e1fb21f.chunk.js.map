{"version":3,"sources":["reportWebVitals.js","components/Editor.js","components/Previewer.js","components/example.md","components/MarkdownPreviewer.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Editor","props","className","id","style","background","border","fontFamily","fontSize","height","value","onChange","handleChange","Previewer","marked","setOptions","pedantic","gfm","breaks","sanitize","smartLists","dangerouslySetInnerHTML","__html","source","MarkdownPreviewer","useState","setValue","useEffect","fetch","Example","res","text","hljs","highlightAll","Fragment","e","target","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gMAYeA,G,YAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,uCCWCQ,MAhBf,SAAgBC,GACZ,OACI,yBAASC,UAAU,mBAAnB,SACI,sBAAMA,UAAU,cAAhB,SACI,0BACIC,GAAG,SACHC,MAAO,CAAEC,WAAY,cAAeC,OAAQ,OAAQC,WAAY,YAAaC,SAAU,SAAUC,OAAQ,QACzGP,UAAU,QACVQ,MAAOT,EAAMS,MACbC,SAAUV,EAAMW,oB,gBCcrBC,MAtBf,SAAmBZ,GAaf,OAZAa,IAAOC,WAAW,CACdC,UAAU,EACVC,KAAK,EACLC,QAAQ,EACRC,UAAU,EACVC,YAAY,IAQZ,yBACIjB,GAAG,UACHD,UAAU,sBACVmB,wBARG,CACHC,OAAQR,IAAOb,EAAMsB,YCblB,MAA0B,mCCqC1BC,MA1Bf,WAEI,MAA0BC,mBAAS,IAAnC,mBAAOf,EAAP,KAAcgB,EAAd,KAcA,OAZAC,qBAAU,WACNC,MAAMC,GACLnC,MAAK,SAAAoC,GAAG,OAAIA,EAAIC,UAChBrC,MAAK,SAAAqC,GACF,OAAOL,EAASK,QAErB,IAEHJ,qBAAU,WACNK,IAAKC,kBAIL,cAAC,IAAMC,SAAP,UACI,uBAAMhC,UAAU,OAAhB,UACI,cAAC,EAAD,CAAQQ,MAAOA,EAAOE,aAAc,SAACuB,GAAD,OAAOT,EAASS,EAAEC,OAAO1B,UAC7D,cAAC,EAAD,CAAWa,OAAQb,UCtBnC2B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BlD,M","file":"static/js/main.1e1fb21f.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\"\r\n\r\nfunction Editor(props) {\r\n    return (\r\n        <section className=\"markdown__editor\">\r\n            <form className=\"w-100 h-100\">\r\n                <textarea\r\n                    id=\"editor\"\r\n                    style={{ background: \"transparent\", border: \"none\", fontFamily: \"monospace\", fontSize: \"0.8rem\", height: \"100%\" }}\r\n                    className=\"w-100\"\r\n                    value={props.value}\r\n                    onChange={props.handleChange}\r\n                />\r\n            </form>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Editor","import React from 'react'\r\nimport marked from \"marked\"\r\n\r\nfunction Previewer(props) {\r\n    marked.setOptions({\r\n        pedantic: false,\r\n        gfm: true,\r\n        breaks: true,\r\n        sanitize: false,\r\n        smartLists: true,\r\n    });\r\n    const markdown = () => {\r\n        return {\r\n            __html: marked(props.source)\r\n        }\r\n    }\r\n    return (\r\n        <section \r\n            id=\"preview\" \r\n            className=\"markdown__previewer\" \r\n            dangerouslySetInnerHTML={markdown()}>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Previewer","export default __webpack_public_path__ + \"static/media/example.00542790.md\";","import React from \"react\"\r\nimport { useState, useEffect } from \"react\"\r\n\r\nimport hljs from 'highlight.js'\r\nimport 'highlight.js/styles/atom-one-dark.css'\r\n\r\nimport Editor from \"./Editor\"\r\nimport Previewer from \"./Previewer\"\r\n\r\nimport Example from \"./example.md\"\r\n\r\nfunction MarkdownPreviewer() {\r\n\r\n    const [value, setValue] = useState(\"\")\r\n    \r\n    useEffect(() => {\r\n        fetch(Example)\r\n        .then(res => res.text())\r\n        .then(text => {\r\n            return setValue(text)\r\n        });\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        hljs.highlightAll()\r\n    })\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <main className=\"main\">\r\n                <Editor value={value} handleChange={(e) => setValue(e.target.value)} />\r\n                <Previewer source={value} />\r\n            </main>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default MarkdownPreviewer","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport './styles/css/main.css';\n\nimport reportWebVitals from './reportWebVitals';\nimport MarkdownPreviewer from \"./components/MarkdownPreviewer\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <MarkdownPreviewer />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}